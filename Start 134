import math
def all_primes_below_n(n):
    primes_bool = [False, False] + [True] * (n - 2)
    for k in range(2, int(math.sqrt(n)) + 1):
        if primes_bool[k]:
            for l in range(2*k,n,k):
                primes_bool[l] = False
    primes_list = []
    for k in range(n):
        if primes_bool[k]:
            primes_list.append(k)
    return primes_list

mlst = [[],[0,1,0,3,0,0,0,7,0,9],[],[0,7,0,1,0,0,0,9,0,3],[],[],[],[0,3,0,9,0,0,0,1,0,7],[],[0,9,0,7,0,0,0,3,0,1]]
def mod_odd(n,target):
   return mlst[n][target]

def pair(p1,p2):
    mod = 10**len(str(p1))
    i = mod_odd(p1 % 10, p2 % 10) 
    while i*p2 % mod != p1:
        i += 10
    return i*p2
   
print(pair(19,23))
