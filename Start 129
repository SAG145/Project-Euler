import math
from time import perf_counter
start = perf_counter()
def all_primes_below_n(n):
    primes_bool = [False, False] + [True] * (n - 2)
    for k in range(2, int(math.sqrt(n)) + 1):
        if primes_bool[k]:
            for l in range(2*k,n,k):
                primes_bool[l] = False
    primes_list = []
    for k in range(n):
        if primes_bool[k]:
            primes_list.append(k)
    return primes_list
    
def R(k):
    return int("1"*k)

def gcd(a,b):
    while b > 0:
        r = a % b
        a = b
        b = r
    return a
    
def lcm(lst):
    if len(lst) == 2:
        return lst[0]*lst[1] // gcd(lst[0],lst[1])
    return lcm(lcm(lst[:2]) + lst[2:])
    
primes_a_list = []
primes = all_primes_below_n(10**6 + 10)
print(primes[-1])
